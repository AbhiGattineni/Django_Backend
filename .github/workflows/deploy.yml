name: Deploy the backend

on:
    push:
        branches:
            - dev
            - main

env:

    EC2_USER:  ${{ secrets.EC2_USER }}                  # Replace with your EC2 username
    EC2_HOST: ${{ secrets.EC2_HOST }}
    SECRET_KEY: ${{ secrets.SECRET_KEY }}
    MYSQL_DB: ${{ secrets.MYSQL_DB }}
    MYSQL_USER: ${{ secrets.MYSQL_USER }}
    MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
    MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
    DB_ENGINE: ${{ secrets.DB_ENGINE }}
    DB_PORT: ${{ secrets.DB_PORT }}

jobs:
    build:
        runs-on: ubuntu-latest
        environment: dev
        # permissions:
        #     id-token: write  # Grant id-token permission for OIDC
        #     contents: read 
        steps:
            - name: Checkout branch
              uses: actions/checkout@v3

            # - name: Setup Python
            #   uses: actions/setup-python@v3
            #   with:
            #     python-version: ${{ matrix.python-version }}
            # - name: Install Dependencies
            #   run: |
            #         python -m pip install --upgrade pip
            #         pip install -r requirements.txt 
            #         pip install awscli

            - name: Configure SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Deploy Code to EC2
              run: |
                echo "Connecting to EC2..."
                ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
                    cd Django_Backend/
                    ls -la
                    git branch
                    git pull origin main
                
                    RUNNING_CONTAINERS=$(docker ps -q)
                    if [ -z "$RUNNING_CONTAINERS" ]; then
                    echo "No running Docker containers. Skipping 'docker-compose down'."
                    else
                    echo "Stopping running containers..."
                    docker-compose down
                    fi
                    export SECRET_KEY=$SECRET_KEY
                    export MYSQL_DB=$MYSQL_DB
                    export MYSQL_USER=$MYSQL_USER
                    export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
                    export MYSQL_HOST=$MYSQL_HOST
                    export DB_ENGINE=$DB_ENGINE
                    export DB_PORT=$DB_PORT
                    echo "Building Docker containers..."
                    docker-compose build

                    echo "Starting Docker containers..."
                    docker-compose up
                    
                    # echo "Waiting for containers to start..."
                    # sleep 30

                    # echo "Validating Docker container statuses..."
                    # RUNNING_CONTAINERS=$(docker ps -q)
                    # if [ -z "$RUNNING_CONTAINERS" ]; then
                    # echo "No Docker containers are running after 'docker-compose up'."
                    # exit 1
                    # else
                    # echo "The following containers are running:"
                    # docker ps
                    # fi
                EOF
             

                    
            
                          
                







